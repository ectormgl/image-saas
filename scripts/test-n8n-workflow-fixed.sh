#!/bin/bash

# Script para testar o workflow n8n CORRIGIDO
# Uso: ./test-n8n-workflow-fixed.sh [webhook-url]

echo "üß™ Testando Workflow N8n CORRIGIDO..."

# URL do webhook (pode ser passada como par√¢metro)
if [ -n "$1" ]; then
    WEBHOOK_URL="$1"
else
    # Tentar ler do .env
    if [ -f ".env" ]; then
        source .env
        WEBHOOK_URL="${VITE_N8N_BASE_URL%/}/webhook/generate-image"
    else
        echo "‚ùå Erro: URL do webhook n√£o fornecida"
        echo "Uso: ./test-n8n-workflow-fixed.sh [webhook-url]"
        echo "Ou configure VITE_N8N_BASE_URL no .env"
        exit 1
    fi
fi

echo "üì° Testando webhook: $WEBHOOK_URL"

# Dados de teste compat√≠veis com workflow corrigido
TEST_DATA='{
  "productName": "Creme Hidratante Premium",
  "slogan": "Hidrata√ß√£o que voc√™ sente",
  "category": "skincare",
  "benefits": "F√≥rmula avan√ßada com √°cido hialur√¥nico e vitamina E para hidrata√ß√£o profunda",
  "productImage": "https://images.unsplash.com/photo-1556228720-195a672e8a03?w=400",
  "userId": "test-user-456",
  "requestId": "test-req-'$(date +%s)'",
  "brandTone": "Clean, natural e confi√°vel",
  "colorTheme": "Tons naturais, verde suave e branco",
  "targetAudience": "Mulheres de 25-45 anos que valorizam skincare natural",
  "stylePreferences": "Fotografia clean, ilumina√ß√£o natural, composi√ß√£o minimalista"
}'

echo "üì§ Enviando dados de teste..."
echo "$TEST_DATA" | jq . 2>/dev/null || echo "$TEST_DATA"

echo ""
echo "‚è≥ Enviando requisi√ß√£o..."

# Fazer requisi√ß√£o
RESPONSE=$(curl -s -w "\n%{http_code}" -X POST "$WEBHOOK_URL" \
  -H "Content-Type: application/json" \
  -d "$TEST_DATA")

# Separar resposta e c√≥digo HTTP
HTTP_BODY=$(echo "$RESPONSE" | sed '$d')
HTTP_CODE=$(echo "$RESPONSE" | tail -n1)

echo "üì• C√≥digo HTTP: $HTTP_CODE"

if [ "$HTTP_CODE" = "200" ] || [ "$HTTP_CODE" = "201" ]; then
    echo "‚úÖ Requisi√ß√£o bem-sucedida!"
    echo ""
    echo "üìÑ Resposta:"
    echo "$HTTP_BODY" | jq . 2>/dev/null || echo "$HTTP_BODY"
    
    # Verificar se a resposta cont√©m imageUrl
    if echo "$HTTP_BODY" | grep -q "imageUrl"; then
        echo ""
        echo "üéâ Workflow funcionando! Imagem gerada com sucesso!"
        
        # Extrair URL da imagem
        IMAGE_URL=$(echo "$HTTP_BODY" | jq -r '.imageUrl' 2>/dev/null)
        if [ "$IMAGE_URL" != "null" ] && [ -n "$IMAGE_URL" ]; then
            echo "üñºÔ∏è  URL da imagem: $IMAGE_URL"
        fi
    else
        echo ""
        echo "‚ö†Ô∏è  Workflow executado mas sem imageUrl na resposta"
    fi
else
    echo "‚ùå Erro na requisi√ß√£o!"
    echo ""
    echo "üìÑ Resposta de erro:"
    echo "$HTTP_BODY"
fi

echo ""
echo "üîç Verifique no n8n:"
echo "   - Se o workflow est√° ativo"
echo "   - Se as credenciais OpenAI est√£o configuradas"
echo "   - Logs de execu√ß√£o para mais detalhes"
